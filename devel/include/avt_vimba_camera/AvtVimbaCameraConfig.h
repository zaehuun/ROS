//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the avt_vimba_camera package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __avt_vimba_camera__AVTVIMBACAMERACONFIG_H__
#define __avt_vimba_camera__AVTVIMBACAMERACONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace avt_vimba_camera
{
  class AvtVimbaCameraConfigStatics;

  class AvtVimbaCameraConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(AvtVimbaCameraConfig &config, const AvtVimbaCameraConfig &max, const AvtVimbaCameraConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const AvtVimbaCameraConfig &config1, const AvtVimbaCameraConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, AvtVimbaCameraConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const AvtVimbaCameraConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, AvtVimbaCameraConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const AvtVimbaCameraConfig &config) const = 0;
      virtual void getValue(const AvtVimbaCameraConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T AvtVimbaCameraConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (AvtVimbaCameraConfig::* field);

      virtual void clamp(AvtVimbaCameraConfig &config, const AvtVimbaCameraConfig &max, const AvtVimbaCameraConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const AvtVimbaCameraConfig &config1, const AvtVimbaCameraConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, AvtVimbaCameraConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const AvtVimbaCameraConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, AvtVimbaCameraConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const AvtVimbaCameraConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const AvtVimbaCameraConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, AvtVimbaCameraConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, AvtVimbaCameraConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<AvtVimbaCameraConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(AvtVimbaCameraConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("frame_id"==(*_i)->name){frame_id = boost::any_cast<std::string>(val);}
        if("trig_timestamp_topic"==(*_i)->name){trig_timestamp_topic = boost::any_cast<std::string>(val);}
        if("acquisition_mode"==(*_i)->name){acquisition_mode = boost::any_cast<std::string>(val);}
        if("acquisition_rate"==(*_i)->name){acquisition_rate = boost::any_cast<double>(val);}
        if("trigger_source"==(*_i)->name){trigger_source = boost::any_cast<std::string>(val);}
        if("trigger_mode"==(*_i)->name){trigger_mode = boost::any_cast<std::string>(val);}
        if("trigger_selector"==(*_i)->name){trigger_selector = boost::any_cast<std::string>(val);}
        if("trigger_activation"==(*_i)->name){trigger_activation = boost::any_cast<std::string>(val);}
        if("trigger_delay"==(*_i)->name){trigger_delay = boost::any_cast<double>(val);}
        if("exposure"==(*_i)->name){exposure = boost::any_cast<double>(val);}
        if("exposure_auto"==(*_i)->name){exposure_auto = boost::any_cast<std::string>(val);}
        if("exposure_auto_alg"==(*_i)->name){exposure_auto_alg = boost::any_cast<std::string>(val);}
        if("exposure_auto_tol"==(*_i)->name){exposure_auto_tol = boost::any_cast<int>(val);}
        if("exposure_auto_max"==(*_i)->name){exposure_auto_max = boost::any_cast<int>(val);}
        if("exposure_auto_min"==(*_i)->name){exposure_auto_min = boost::any_cast<int>(val);}
        if("exposure_auto_outliers"==(*_i)->name){exposure_auto_outliers = boost::any_cast<int>(val);}
        if("exposure_auto_rate"==(*_i)->name){exposure_auto_rate = boost::any_cast<int>(val);}
        if("exposure_auto_target"==(*_i)->name){exposure_auto_target = boost::any_cast<int>(val);}
        if("gain"==(*_i)->name){gain = boost::any_cast<double>(val);}
        if("gain_auto"==(*_i)->name){gain_auto = boost::any_cast<std::string>(val);}
        if("gain_auto_tol"==(*_i)->name){gain_auto_tol = boost::any_cast<int>(val);}
        if("gain_auto_max"==(*_i)->name){gain_auto_max = boost::any_cast<double>(val);}
        if("gain_auto_min"==(*_i)->name){gain_auto_min = boost::any_cast<double>(val);}
        if("gain_auto_outliers"==(*_i)->name){gain_auto_outliers = boost::any_cast<int>(val);}
        if("gain_auto_rate"==(*_i)->name){gain_auto_rate = boost::any_cast<int>(val);}
        if("gain_auto_target"==(*_i)->name){gain_auto_target = boost::any_cast<int>(val);}
        if("balance_ratio_abs"==(*_i)->name){balance_ratio_abs = boost::any_cast<double>(val);}
        if("balance_ratio_selector"==(*_i)->name){balance_ratio_selector = boost::any_cast<std::string>(val);}
        if("whitebalance_auto"==(*_i)->name){whitebalance_auto = boost::any_cast<std::string>(val);}
        if("whitebalance_auto_tol"==(*_i)->name){whitebalance_auto_tol = boost::any_cast<int>(val);}
        if("whitebalance_auto_rate"==(*_i)->name){whitebalance_auto_rate = boost::any_cast<int>(val);}
        if("binning_x"==(*_i)->name){binning_x = boost::any_cast<int>(val);}
        if("binning_y"==(*_i)->name){binning_y = boost::any_cast<int>(val);}
        if("decimation_x"==(*_i)->name){decimation_x = boost::any_cast<int>(val);}
        if("decimation_y"==(*_i)->name){decimation_y = boost::any_cast<int>(val);}
        if("width"==(*_i)->name){width = boost::any_cast<int>(val);}
        if("height"==(*_i)->name){height = boost::any_cast<int>(val);}
        if("roi_width"==(*_i)->name){roi_width = boost::any_cast<int>(val);}
        if("roi_height"==(*_i)->name){roi_height = boost::any_cast<int>(val);}
        if("roi_offset_x"==(*_i)->name){roi_offset_x = boost::any_cast<int>(val);}
        if("roi_offset_y"==(*_i)->name){roi_offset_y = boost::any_cast<int>(val);}
        if("pixel_format"==(*_i)->name){pixel_format = boost::any_cast<std::string>(val);}
        if("stream_bytes_per_second"==(*_i)->name){stream_bytes_per_second = boost::any_cast<int>(val);}
        if("ptp_mode"==(*_i)->name){ptp_mode = boost::any_cast<std::string>(val);}
        if("sync_in_selector"==(*_i)->name){sync_in_selector = boost::any_cast<std::string>(val);}
        if("sync_out_polarity"==(*_i)->name){sync_out_polarity = boost::any_cast<std::string>(val);}
        if("sync_out_selector"==(*_i)->name){sync_out_selector = boost::any_cast<std::string>(val);}
        if("sync_out_source"==(*_i)->name){sync_out_source = boost::any_cast<std::string>(val);}
        if("iris_auto_target"==(*_i)->name){iris_auto_target = boost::any_cast<int>(val);}
        if("iris_mode"==(*_i)->name){iris_mode = boost::any_cast<std::string>(val);}
        if("iris_video_level_min"==(*_i)->name){iris_video_level_min = boost::any_cast<int>(val);}
        if("iris_video_level_max"==(*_i)->name){iris_video_level_max = boost::any_cast<int>(val);}
      }
    }

    std::string frame_id;
std::string trig_timestamp_topic;
std::string acquisition_mode;
double acquisition_rate;
std::string trigger_source;
std::string trigger_mode;
std::string trigger_selector;
std::string trigger_activation;
double trigger_delay;
double exposure;
std::string exposure_auto;
std::string exposure_auto_alg;
int exposure_auto_tol;
int exposure_auto_max;
int exposure_auto_min;
int exposure_auto_outliers;
int exposure_auto_rate;
int exposure_auto_target;
double gain;
std::string gain_auto;
int gain_auto_tol;
double gain_auto_max;
double gain_auto_min;
int gain_auto_outliers;
int gain_auto_rate;
int gain_auto_target;
double balance_ratio_abs;
std::string balance_ratio_selector;
std::string whitebalance_auto;
int whitebalance_auto_tol;
int whitebalance_auto_rate;
int binning_x;
int binning_y;
int decimation_x;
int decimation_y;
int width;
int height;
int roi_width;
int roi_height;
int roi_offset_x;
int roi_offset_y;
std::string pixel_format;
int stream_bytes_per_second;
std::string ptp_mode;
std::string sync_in_selector;
std::string sync_out_polarity;
std::string sync_out_selector;
std::string sync_out_source;
int iris_auto_target;
std::string iris_mode;
int iris_video_level_min;
int iris_video_level_max;

    bool state;
    std::string name;

    
}groups;



//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string frame_id;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string trig_timestamp_topic;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string acquisition_mode;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double acquisition_rate;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string trigger_source;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string trigger_mode;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string trigger_selector;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string trigger_activation;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double trigger_delay;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exposure;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string exposure_auto;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string exposure_auto_alg;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exposure_auto_tol;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exposure_auto_max;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exposure_auto_min;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exposure_auto_outliers;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exposure_auto_rate;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exposure_auto_target;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double gain;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string gain_auto;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int gain_auto_tol;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double gain_auto_max;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double gain_auto_min;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int gain_auto_outliers;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int gain_auto_rate;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int gain_auto_target;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double balance_ratio_abs;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string balance_ratio_selector;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string whitebalance_auto;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int whitebalance_auto_tol;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int whitebalance_auto_rate;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int binning_x;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int binning_y;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int decimation_x;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int decimation_y;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int width;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int height;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_width;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_height;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_offset_x;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_offset_y;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string pixel_format;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int stream_bytes_per_second;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string ptp_mode;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string sync_in_selector;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string sync_out_polarity;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string sync_out_selector;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string sync_out_source;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int iris_auto_target;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string iris_mode;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int iris_video_level_min;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int iris_video_level_max;
//#line 228 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("AvtVimbaCameraConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const AvtVimbaCameraConfig &__max__ = __getMax__();
      const AvtVimbaCameraConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const AvtVimbaCameraConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const AvtVimbaCameraConfig &__getDefault__();
    static const AvtVimbaCameraConfig &__getMax__();
    static const AvtVimbaCameraConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const AvtVimbaCameraConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void AvtVimbaCameraConfig::ParamDescription<std::string>::clamp(AvtVimbaCameraConfig &config, const AvtVimbaCameraConfig &max, const AvtVimbaCameraConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class AvtVimbaCameraConfigStatics
  {
    friend class AvtVimbaCameraConfig;

    AvtVimbaCameraConfigStatics()
    {
AvtVimbaCameraConfig::GroupDescription<AvtVimbaCameraConfig::DEFAULT, AvtVimbaCameraConfig> Default("Default", "", 0, 0, true, &AvtVimbaCameraConfig::groups);
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frame_id = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frame_id = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frame_id = "camera";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("frame_id", "str", 0, "The optical camera TF frame set in message headers.", "", &AvtVimbaCameraConfig::frame_id)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("frame_id", "str", 0, "The optical camera TF frame set in message headers.", "", &AvtVimbaCameraConfig::frame_id)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trig_timestamp_topic = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trig_timestamp_topic = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trig_timestamp_topic = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trig_timestamp_topic", "str", 1, "Sets the topic from which an externally trigged camera receives its trigger timestamps.", "", &AvtVimbaCameraConfig::trig_timestamp_topic)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trig_timestamp_topic", "str", 1, "Sets the topic from which an externally trigged camera receives its trigger timestamps.", "", &AvtVimbaCameraConfig::trig_timestamp_topic)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.acquisition_mode = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.acquisition_mode = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.acquisition_mode = "Continuous";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("acquisition_mode", "str", 1, "Camera acquisition mode", "{'enum_description': 'Set Trigger Mode', 'enum': [{'srcline': 30, 'description': 'After an acquisition start event, the camera will continuously receive frame trigger events.', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous'}, {'srcline': 31, 'description': 'The camera will only deliver a single frame trigger event', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SingleFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'SingleFrame'}, {'srcline': 32, 'description': 'The camera will acquire the number of images specified by `~AcquisitionFrameCount`. Further trigger events will be ignored', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'MultiFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'MultiFrame'}, {'srcline': 33, 'description': 'The camera will continuously record images into the camera on-board memory', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Recorder', 'ctype': 'std::string', 'type': 'str', 'name': 'Recorder'}]}", &AvtVimbaCameraConfig::acquisition_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("acquisition_mode", "str", 1, "Camera acquisition mode", "{'enum_description': 'Set Trigger Mode', 'enum': [{'srcline': 30, 'description': 'After an acquisition start event, the camera will continuously receive frame trigger events.', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Continuous'}, {'srcline': 31, 'description': 'The camera will only deliver a single frame trigger event', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SingleFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'SingleFrame'}, {'srcline': 32, 'description': 'The camera will acquire the number of images specified by `~AcquisitionFrameCount`. Further trigger events will be ignored', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'MultiFrame', 'ctype': 'std::string', 'type': 'str', 'name': 'MultiFrame'}, {'srcline': 33, 'description': 'The camera will continuously record images into the camera on-board memory', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Recorder', 'ctype': 'std::string', 'type': 'str', 'name': 'Recorder'}]}", &AvtVimbaCameraConfig::acquisition_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.acquisition_rate = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.acquisition_rate = 30.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.acquisition_rate = 2.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("acquisition_rate", "double", 0, "Sets the expected triggering rate in externally triggered mode.", "", &AvtVimbaCameraConfig::acquisition_rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("acquisition_rate", "double", 0, "Sets the expected triggering rate in externally triggered mode.", "", &AvtVimbaCameraConfig::acquisition_rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trigger_source = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trigger_source = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trigger_source = "FixedRate";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trigger_source", "str", 1, "Camera trigger source", "{'enum_description': 'Set Trigger Mode', 'enum': [{'srcline': 12, 'description': 'Run at maximum frame rate', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Freerun', 'ctype': 'std::string', 'type': 'str', 'name': 'Freerun'}, {'srcline': 13, 'description': 'External trigger on SyncIn1 line', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Line1', 'ctype': 'std::string', 'type': 'str', 'name': 'Line1'}, {'srcline': 14, 'description': 'External trigger on SyncIn2 line', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Line2', 'ctype': 'std::string', 'type': 'str', 'name': 'Line2'}, {'srcline': 15, 'description': 'External trigger on SyncIn3 line', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Line3', 'ctype': 'std::string', 'type': 'str', 'name': 'Line3'}, {'srcline': 16, 'description': 'External trigger on SyncIn4 line', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Line4', 'ctype': 'std::string', 'type': 'str', 'name': 'Line4'}, {'srcline': 17, 'description': 'Camera self-triggers at a fixed frame rate defined by `~AcquisitionFrameRateAbs`', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FixedRate', 'ctype': 'std::string', 'type': 'str', 'name': 'FixedRate'}, {'srcline': 18, 'description': 'Software inititated image capture', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Software', 'ctype': 'std::string', 'type': 'str', 'name': 'Software'}]}", &AvtVimbaCameraConfig::trigger_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trigger_source", "str", 1, "Camera trigger source", "{'enum_description': 'Set Trigger Mode', 'enum': [{'srcline': 12, 'description': 'Run at maximum frame rate', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Freerun', 'ctype': 'std::string', 'type': 'str', 'name': 'Freerun'}, {'srcline': 13, 'description': 'External trigger on SyncIn1 line', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Line1', 'ctype': 'std::string', 'type': 'str', 'name': 'Line1'}, {'srcline': 14, 'description': 'External trigger on SyncIn2 line', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Line2', 'ctype': 'std::string', 'type': 'str', 'name': 'Line2'}, {'srcline': 15, 'description': 'External trigger on SyncIn3 line', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Line3', 'ctype': 'std::string', 'type': 'str', 'name': 'Line3'}, {'srcline': 16, 'description': 'External trigger on SyncIn4 line', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Line4', 'ctype': 'std::string', 'type': 'str', 'name': 'Line4'}, {'srcline': 17, 'description': 'Camera self-triggers at a fixed frame rate defined by `~AcquisitionFrameRateAbs`', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FixedRate', 'ctype': 'std::string', 'type': 'str', 'name': 'FixedRate'}, {'srcline': 18, 'description': 'Software inititated image capture', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Software', 'ctype': 'std::string', 'type': 'str', 'name': 'Software'}]}", &AvtVimbaCameraConfig::trigger_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trigger_mode = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trigger_mode = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trigger_mode = "On";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trigger_mode", "str", 1, "Camera trigger mode", "{'enum_description': 'Trigger mode', 'enum': [{'srcline': 24, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'On', 'ctype': 'std::string', 'type': 'str', 'name': 'ModeOn'}, {'srcline': 25, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'ModeOff'}]}", &AvtVimbaCameraConfig::trigger_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trigger_mode", "str", 1, "Camera trigger mode", "{'enum_description': 'Trigger mode', 'enum': [{'srcline': 24, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'On', 'ctype': 'std::string', 'type': 'str', 'name': 'ModeOn'}, {'srcline': 25, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'ModeOff'}]}", &AvtVimbaCameraConfig::trigger_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trigger_selector = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trigger_selector = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trigger_selector = "FrameStart";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trigger_selector", "str", 1, "Camera trigger selector", "{'enum_description': 'Trigger activation selector', 'enum': [{'srcline': 26, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FrameStart', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameStart'}, {'srcline': 27, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionStart', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionStart'}, {'srcline': 28, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionEnd', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionEnd'}, {'srcline': 29, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionRecord', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionRecord'}]}", &AvtVimbaCameraConfig::trigger_selector)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trigger_selector", "str", 1, "Camera trigger selector", "{'enum_description': 'Trigger activation selector', 'enum': [{'srcline': 26, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FrameStart', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameStart'}, {'srcline': 27, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionStart', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionStart'}, {'srcline': 28, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionEnd', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionEnd'}, {'srcline': 29, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionRecord', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionRecord'}]}", &AvtVimbaCameraConfig::trigger_selector)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trigger_activation = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trigger_activation = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trigger_activation = "RisingEdge";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trigger_activation", "str", 1, "Camera trigger activation", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 19, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'RisingEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'RisingEdge'}, {'srcline': 20, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FallingEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'FallingEdge'}, {'srcline': 21, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AnyEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'AnyEdge'}, {'srcline': 22, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'LevelHigh', 'ctype': 'std::string', 'type': 'str', 'name': 'LevelHigh'}, {'srcline': 23, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'LevelLow', 'ctype': 'std::string', 'type': 'str', 'name': 'LevelLow'}]}", &AvtVimbaCameraConfig::trigger_activation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("trigger_activation", "str", 1, "Camera trigger activation", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 19, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'RisingEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'RisingEdge'}, {'srcline': 20, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FallingEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'FallingEdge'}, {'srcline': 21, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AnyEdge', 'ctype': 'std::string', 'type': 'str', 'name': 'AnyEdge'}, {'srcline': 22, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'LevelHigh', 'ctype': 'std::string', 'type': 'str', 'name': 'LevelHigh'}, {'srcline': 23, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'LevelLow', 'ctype': 'std::string', 'type': 'str', 'name': 'LevelLow'}]}", &AvtVimbaCameraConfig::trigger_activation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trigger_delay = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trigger_delay = 60000000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trigger_delay = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("trigger_delay", "double", 0, "Trigger delay in us (only valid when set to external trigger)", "", &AvtVimbaCameraConfig::trigger_delay)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("trigger_delay", "double", 0, "Trigger delay in us (only valid when set to external trigger)", "", &AvtVimbaCameraConfig::trigger_delay)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure = 41.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure = 60000000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure = 50000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("exposure", "double", 0, "Camera exposure time in microseconds.", "", &AvtVimbaCameraConfig::exposure)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("exposure", "double", 0, "Camera exposure time in microseconds.", "", &AvtVimbaCameraConfig::exposure)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_auto = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_auto = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_auto = "Continuous";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("exposure_auto", "str", 0, "Sets the camera exposure. If continously automatic, causes the `~exposure` setting to be ignored.", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 67, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 68, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 69, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Auto'}]}", &AvtVimbaCameraConfig::exposure_auto)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("exposure_auto", "str", 0, "Sets the camera exposure. If continously automatic, causes the `~exposure` setting to be ignored.", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 67, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 68, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 69, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Auto'}]}", &AvtVimbaCameraConfig::exposure_auto)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_auto_alg = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_auto_alg = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_auto_alg = "FitRange";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("exposure_auto_alg", "str", 0, "The following algorithms can be used to calculate auto exposure", "{'enum_description': 'The following algorithms can be used to calculate auto exposure', 'enum': [{'srcline': 96, 'description': '[Default] The arithmetic mean of the histogram of the current image is compared to ExposureAutoTarget, and the next image adjusted in exposure time to meet this target. Bright areas are allowed to saturate', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mean', 'ctype': 'std::string', 'type': 'str', 'name': 'Mean'}, {'srcline': 97, 'description': 'The histogram of the current image is measured, and the exposure time of the next image is adjusted so bright areas are not saturated', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FitRange', 'ctype': 'std::string', 'type': 'str', 'name': 'FitRange'}]}", &AvtVimbaCameraConfig::exposure_auto_alg)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("exposure_auto_alg", "str", 0, "The following algorithms can be used to calculate auto exposure", "{'enum_description': 'The following algorithms can be used to calculate auto exposure', 'enum': [{'srcline': 96, 'description': '[Default] The arithmetic mean of the histogram of the current image is compared to ExposureAutoTarget, and the next image adjusted in exposure time to meet this target. Bright areas are allowed to saturate', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mean', 'ctype': 'std::string', 'type': 'str', 'name': 'Mean'}, {'srcline': 97, 'description': 'The histogram of the current image is measured, and the exposure time of the next image is adjusted so bright areas are not saturated', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FitRange', 'ctype': 'std::string', 'type': 'str', 'name': 'FitRange'}]}", &AvtVimbaCameraConfig::exposure_auto_alg)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_auto_tol = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_auto_tol = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_auto_tol = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_tol", "int", 0, "Tolerance in variation from ExposureAutoTarget in which the auto exposure algorithm will not respond.", "", &AvtVimbaCameraConfig::exposure_auto_tol)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_tol", "int", 0, "Tolerance in variation from ExposureAutoTarget in which the auto exposure algorithm will not respond.", "", &AvtVimbaCameraConfig::exposure_auto_tol)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_auto_max = 41;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_auto_max = 60000000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_auto_max = 50000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_max", "int", 0, "The max exposure time in auto exposure mode, in microseconds.", "", &AvtVimbaCameraConfig::exposure_auto_max)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_max", "int", 0, "The max exposure time in auto exposure mode, in microseconds.", "", &AvtVimbaCameraConfig::exposure_auto_max)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_auto_min = 41;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_auto_min = 60000000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_auto_min = 41;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_min", "int", 0, "The min exposure time in auto exposure mode, in microseconds.", "", &AvtVimbaCameraConfig::exposure_auto_min)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_min", "int", 0, "The min exposure time in auto exposure mode, in microseconds.", "", &AvtVimbaCameraConfig::exposure_auto_min)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_auto_outliers = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_auto_outliers = 10000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_auto_outliers = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_outliers", "int", 0, "The total pixels from top of the distribution that are ignored by the auto exposure algorithm (0.01% increments)", "", &AvtVimbaCameraConfig::exposure_auto_outliers)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_outliers", "int", 0, "The total pixels from top of the distribution that are ignored by the auto exposure algorithm (0.01% increments)", "", &AvtVimbaCameraConfig::exposure_auto_outliers)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_auto_rate = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_auto_rate = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_auto_rate = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_rate", "int", 0, "The rate at which the auto exposure function changes the exposure setting.100% is auto exposure adjustments running at full speed, and 50% is half speed.", "", &AvtVimbaCameraConfig::exposure_auto_rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_rate", "int", 0, "The rate at which the auto exposure function changes the exposure setting.100% is auto exposure adjustments running at full speed, and 50% is half speed.", "", &AvtVimbaCameraConfig::exposure_auto_rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_auto_target = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_auto_target = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_auto_target = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_target", "int", 0, "The auto exposure target mean value as a percentage, from 0=black to 100=white.", "", &AvtVimbaCameraConfig::exposure_auto_target)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("exposure_auto_target", "int", 0, "The auto exposure target mean value as a percentage, from 0=black to 100=white.", "", &AvtVimbaCameraConfig::exposure_auto_target)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain = 32.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("gain", "double", 0, "The gain level in dB.", "", &AvtVimbaCameraConfig::gain)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("gain", "double", 0, "The gain level in dB.", "", &AvtVimbaCameraConfig::gain)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain_auto = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain_auto = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain_auto = "Continuous";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("gain_auto", "str", 0, "Sets the analog gain. If continously automatic, causes the `~gain` setting to be ignored.", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 67, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 68, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 69, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Auto'}]}", &AvtVimbaCameraConfig::gain_auto)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("gain_auto", "str", 0, "Sets the analog gain. If continously automatic, causes the `~gain` setting to be ignored.", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 67, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 68, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 69, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Auto'}]}", &AvtVimbaCameraConfig::gain_auto)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain_auto_tol = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain_auto_tol = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain_auto_tol = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("gain_auto_tol", "int", 0, "Tolerance in variation from GainAutoTarget in which the auto exposure algorithm will not respond.", "", &AvtVimbaCameraConfig::gain_auto_tol)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("gain_auto_tol", "int", 0, "Tolerance in variation from GainAutoTarget in which the auto exposure algorithm will not respond.", "", &AvtVimbaCameraConfig::gain_auto_tol)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain_auto_max = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain_auto_max = 32.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain_auto_max = 32.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("gain_auto_max", "double", 0, "The max gain level in auto gain mode, in dB.", "", &AvtVimbaCameraConfig::gain_auto_max)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("gain_auto_max", "double", 0, "The max gain level in auto gain mode, in dB.", "", &AvtVimbaCameraConfig::gain_auto_max)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain_auto_min = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain_auto_min = 32.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain_auto_min = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("gain_auto_min", "double", 0, "The min gain level in auto gain mode, in dB.", "", &AvtVimbaCameraConfig::gain_auto_min)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("gain_auto_min", "double", 0, "The min gain level in auto gain mode, in dB.", "", &AvtVimbaCameraConfig::gain_auto_min)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain_auto_outliers = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain_auto_outliers = 10000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain_auto_outliers = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("gain_auto_outliers", "int", 0, "The total pixels from top of the distribution that are ignored by the auto gain algorithm (0.01% increments).", "", &AvtVimbaCameraConfig::gain_auto_outliers)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("gain_auto_outliers", "int", 0, "The total pixels from top of the distribution that are ignored by the auto gain algorithm (0.01% increments).", "", &AvtVimbaCameraConfig::gain_auto_outliers)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain_auto_rate = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain_auto_rate = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain_auto_rate = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("gain_auto_rate", "int", 0, "The rate percentage at which the auto gain function changes.", "", &AvtVimbaCameraConfig::gain_auto_rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("gain_auto_rate", "int", 0, "The rate percentage at which the auto gain function changes.", "", &AvtVimbaCameraConfig::gain_auto_rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain_auto_target = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain_auto_target = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain_auto_target = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("gain_auto_target", "int", 0, "The general lightness or darkness of the auto gain feature. A percentage of maximum brightness.", "", &AvtVimbaCameraConfig::gain_auto_target)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("gain_auto_target", "int", 0, "The general lightness or darkness of the auto gain feature. A percentage of maximum brightness.", "", &AvtVimbaCameraConfig::gain_auto_target)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.balance_ratio_abs = 0.25;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.balance_ratio_abs = 4.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.balance_ratio_abs = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("balance_ratio_abs", "double", 0, "Adjusts the gain of the channel selected in the `~BalanceRatioSelector`", "", &AvtVimbaCameraConfig::balance_ratio_abs)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<double>("balance_ratio_abs", "double", 0, "Adjusts the gain of the channel selected in the `~BalanceRatioSelector`", "", &AvtVimbaCameraConfig::balance_ratio_abs)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.balance_ratio_selector = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.balance_ratio_selector = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.balance_ratio_selector = "Red";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("balance_ratio_selector", "str", 0, "Select the Red or Blue channel to adjust with `~BalanceRatioAbs`", "{'enum_description': 'Select the Red or Blue channel to adjust with `~BalanceRatioAbs`', 'enum': [{'srcline': 70, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Red', 'ctype': 'std::string', 'type': 'str', 'name': 'Red'}, {'srcline': 71, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Blue', 'ctype': 'std::string', 'type': 'str', 'name': 'Blue'}]}", &AvtVimbaCameraConfig::balance_ratio_selector)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("balance_ratio_selector", "str", 0, "Select the Red or Blue channel to adjust with `~BalanceRatioAbs`", "{'enum_description': 'Select the Red or Blue channel to adjust with `~BalanceRatioAbs`', 'enum': [{'srcline': 70, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Red', 'ctype': 'std::string', 'type': 'str', 'name': 'Red'}, {'srcline': 71, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Blue', 'ctype': 'std::string', 'type': 'str', 'name': 'Blue'}]}", &AvtVimbaCameraConfig::balance_ratio_selector)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.whitebalance_auto = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.whitebalance_auto = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.whitebalance_auto = "Continuous";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("whitebalance_auto", "str", 0, "Whether whitebalance will continuously adjust to the current scene. Causes the `~whitebalance_red` and `~whitebalance_blue` settings to be ignored.", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 67, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 68, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 69, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Auto'}]}", &AvtVimbaCameraConfig::whitebalance_auto)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("whitebalance_auto", "str", 0, "Whether whitebalance will continuously adjust to the current scene. Causes the `~whitebalance_red` and `~whitebalance_blue` settings to be ignored.", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 67, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 68, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 69, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Auto'}]}", &AvtVimbaCameraConfig::whitebalance_auto)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.whitebalance_auto_tol = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.whitebalance_auto_tol = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.whitebalance_auto_tol = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("whitebalance_auto_tol", "int", 0, "Tolerance allowed from the ideal white balance values", "", &AvtVimbaCameraConfig::whitebalance_auto_tol)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("whitebalance_auto_tol", "int", 0, "Tolerance allowed from the ideal white balance values", "", &AvtVimbaCameraConfig::whitebalance_auto_tol)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.whitebalance_auto_rate = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.whitebalance_auto_rate = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.whitebalance_auto_rate = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("whitebalance_auto_rate", "int", 0, "Rate of white balance adjustments, from 1 (slowest) to 100 (fastest).", "", &AvtVimbaCameraConfig::whitebalance_auto_rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("whitebalance_auto_rate", "int", 0, "Rate of white balance adjustments, from 1 (slowest) to 100 (fastest).", "", &AvtVimbaCameraConfig::whitebalance_auto_rate)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.binning_x = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.binning_x = 8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.binning_x = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("binning_x", "int", 0, "Number of pixels to bin together horizontally.", "", &AvtVimbaCameraConfig::binning_x)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("binning_x", "int", 0, "Number of pixels to bin together horizontally.", "", &AvtVimbaCameraConfig::binning_x)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.binning_y = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.binning_y = 14;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.binning_y = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("binning_y", "int", 0, "Number of pixels to bin together vertically.", "", &AvtVimbaCameraConfig::binning_y)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("binning_y", "int", 0, "Number of pixels to bin together vertically.", "", &AvtVimbaCameraConfig::binning_y)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.decimation_x = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.decimation_x = 8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.decimation_x = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("decimation_x", "int", 0, "Number of decimation operations in x.", "", &AvtVimbaCameraConfig::decimation_x)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("decimation_x", "int", 0, "Number of decimation operations in x.", "", &AvtVimbaCameraConfig::decimation_x)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.decimation_y = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.decimation_y = 8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.decimation_y = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("decimation_y", "int", 0, "Number of decimation operations in y.", "", &AvtVimbaCameraConfig::decimation_y)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("decimation_y", "int", 0, "Number of decimation operations in y.", "", &AvtVimbaCameraConfig::decimation_y)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.width = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.width = 4096;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.width = 4096;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("width", "int", 0, "Width of the region of interest (0 for automatic).", "", &AvtVimbaCameraConfig::width)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("width", "int", 0, "Width of the region of interest (0 for automatic).", "", &AvtVimbaCameraConfig::width)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.height = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.height = 4096;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.height = 4096;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("height", "int", 0, "Height of the region of interest (0 for automatic).", "", &AvtVimbaCameraConfig::height)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("height", "int", 0, "Height of the region of interest (0 for automatic).", "", &AvtVimbaCameraConfig::height)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_width = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_width = 4095;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_width = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("roi_width", "int", 0, "X offset of the region of interest.", "", &AvtVimbaCameraConfig::roi_width)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("roi_width", "int", 0, "X offset of the region of interest.", "", &AvtVimbaCameraConfig::roi_width)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_height = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_height = 4095;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_height = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("roi_height", "int", 0, "X offset of the region of interest.", "", &AvtVimbaCameraConfig::roi_height)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("roi_height", "int", 0, "X offset of the region of interest.", "", &AvtVimbaCameraConfig::roi_height)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_offset_x = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_offset_x = 4095;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_offset_x = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("roi_offset_x", "int", 0, "X offset of the region of interest.", "", &AvtVimbaCameraConfig::roi_offset_x)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("roi_offset_x", "int", 0, "X offset of the region of interest.", "", &AvtVimbaCameraConfig::roi_offset_x)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_offset_y = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_offset_y = 4095;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_offset_y = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("roi_offset_y", "int", 0, "Y offset of the region of interest.", "", &AvtVimbaCameraConfig::roi_offset_y)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("roi_offset_y", "int", 0, "Y offset of the region of interest.", "", &AvtVimbaCameraConfig::roi_offset_y)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.pixel_format = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.pixel_format = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.pixel_format = "Mono8";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("pixel_format", "str", 3, "Format of the image data.", "{'enum_description': 'Set Pixel Format', 'enum': [{'srcline': 38, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono8'}, {'srcline': 39, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono10', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono10'}, {'srcline': 40, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono10Packed'}, {'srcline': 41, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono12', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono12'}, {'srcline': 42, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono12Packed'}, {'srcline': 43, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR8'}, {'srcline': 44, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG8'}, {'srcline': 45, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB8'}, {'srcline': 46, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG8'}, {'srcline': 47, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR10', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR10'}, {'srcline': 48, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG10', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG10'}, {'srcline': 49, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB10', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB10'}, {'srcline': 50, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG10', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG10'}, {'srcline': 51, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR12', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR12'}, {'srcline': 52, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG12', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG12'}, {'srcline': 53, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB12', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB12'}, {'srcline': 54, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG12', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG12'}, {'srcline': 55, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR10Packed'}, {'srcline': 56, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG10Packed'}, {'srcline': 57, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB10Packed'}, {'srcline': 58, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG10Packed'}, {'srcline': 59, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR12Packed'}, {'srcline': 60, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG12Packed'}, {'srcline': 61, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB12Packed'}, {'srcline': 62, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG12Packed'}, {'srcline': 63, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'RGB8Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'RGB8Packed'}, {'srcline': 64, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BGR8Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BGR8Packed'}]}", &AvtVimbaCameraConfig::pixel_format)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("pixel_format", "str", 3, "Format of the image data.", "{'enum_description': 'Set Pixel Format', 'enum': [{'srcline': 38, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono8'}, {'srcline': 39, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono10', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono10'}, {'srcline': 40, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono10Packed'}, {'srcline': 41, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono12', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono12'}, {'srcline': 42, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Mono12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'Mono12Packed'}, {'srcline': 43, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR8'}, {'srcline': 44, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG8'}, {'srcline': 45, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB8'}, {'srcline': 46, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG8', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG8'}, {'srcline': 47, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR10', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR10'}, {'srcline': 48, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG10', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG10'}, {'srcline': 49, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB10', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB10'}, {'srcline': 50, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG10', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG10'}, {'srcline': 51, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR12', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR12'}, {'srcline': 52, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG12', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG12'}, {'srcline': 53, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB12', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB12'}, {'srcline': 54, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG12', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG12'}, {'srcline': 55, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR10Packed'}, {'srcline': 56, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG10Packed'}, {'srcline': 57, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB10Packed'}, {'srcline': 58, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG10Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG10Packed'}, {'srcline': 59, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGR12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGR12Packed'}, {'srcline': 60, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerRG12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerRG12Packed'}, {'srcline': 61, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerGB12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerGB12Packed'}, {'srcline': 62, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BayerBG12Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BayerBG12Packed'}, {'srcline': 63, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'RGB8Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'RGB8Packed'}, {'srcline': 64, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'BGR8Packed', 'ctype': 'std::string', 'type': 'str', 'name': 'BGR8Packed'}]}", &AvtVimbaCameraConfig::pixel_format)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.stream_bytes_per_second = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.stream_bytes_per_second = 115000000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.stream_bytes_per_second = 45000000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("stream_bytes_per_second", "int", 0, "Limits the data rate of the camera.", "", &AvtVimbaCameraConfig::stream_bytes_per_second)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("stream_bytes_per_second", "int", 0, "Limits the data rate of the camera.", "", &AvtVimbaCameraConfig::stream_bytes_per_second)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.ptp_mode = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.ptp_mode = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.ptp_mode = "Off";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("ptp_mode", "str", 0, "Controls the PTP behavior of the clock port.", "{'enum_description': 'Select PrecissionTimeProtocol Mode', 'enum': [{'srcline': 74, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'PtpOff'}, {'srcline': 75, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Slave', 'ctype': 'std::string', 'type': 'str', 'name': 'PtpSlave'}, {'srcline': 76, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Master', 'ctype': 'std::string', 'type': 'str', 'name': 'PtpMaster'}, {'srcline': 77, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Auto', 'ctype': 'std::string', 'type': 'str', 'name': 'PtpAuto'}]}", &AvtVimbaCameraConfig::ptp_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("ptp_mode", "str", 0, "Controls the PTP behavior of the clock port.", "{'enum_description': 'Select PrecissionTimeProtocol Mode', 'enum': [{'srcline': 74, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'PtpOff'}, {'srcline': 75, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Slave', 'ctype': 'std::string', 'type': 'str', 'name': 'PtpSlave'}, {'srcline': 76, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Master', 'ctype': 'std::string', 'type': 'str', 'name': 'PtpMaster'}, {'srcline': 77, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Auto', 'ctype': 'std::string', 'type': 'str', 'name': 'PtpAuto'}]}", &AvtVimbaCameraConfig::ptp_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sync_in_selector = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sync_in_selector = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sync_in_selector = "SyncIn1";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("sync_in_selector", "str", 1, "Selects the sync-out line to control", "{'enum_description': 'Sync-in selector', 'enum': [{'srcline': 78, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncIn1', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncIn1'}, {'srcline': 79, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncIn2', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncIn2'}, {'srcline': 80, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncIn3', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncIn3'}, {'srcline': 81, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncIn4', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncIn4'}]}", &AvtVimbaCameraConfig::sync_in_selector)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("sync_in_selector", "str", 1, "Selects the sync-out line to control", "{'enum_description': 'Sync-in selector', 'enum': [{'srcline': 78, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncIn1', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncIn1'}, {'srcline': 79, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncIn2', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncIn2'}, {'srcline': 80, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncIn3', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncIn3'}, {'srcline': 81, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncIn4', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncIn4'}]}", &AvtVimbaCameraConfig::sync_in_selector)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sync_out_polarity = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sync_out_polarity = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sync_out_polarity = "Normal";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("sync_out_polarity", "str", 1, "Polarity applied to the sync-out line specified by `sync_out_selector`", "{'enum_description': 'Polarity', 'enum': [{'srcline': 72, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Normal', 'ctype': 'std::string', 'type': 'str', 'name': 'Normal'}, {'srcline': 73, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Invert', 'ctype': 'std::string', 'type': 'str', 'name': 'Invert'}]}", &AvtVimbaCameraConfig::sync_out_polarity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("sync_out_polarity", "str", 1, "Polarity applied to the sync-out line specified by `sync_out_selector`", "{'enum_description': 'Polarity', 'enum': [{'srcline': 72, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Normal', 'ctype': 'std::string', 'type': 'str', 'name': 'Normal'}, {'srcline': 73, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Invert', 'ctype': 'std::string', 'type': 'str', 'name': 'Invert'}]}", &AvtVimbaCameraConfig::sync_out_polarity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sync_out_selector = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sync_out_selector = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sync_out_selector = "SyncOut1";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("sync_out_selector", "str", 1, "Selects the sync-out line to control", "{'enum_description': 'Sync-out selector', 'enum': [{'srcline': 82, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncOut1', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncOut1'}, {'srcline': 83, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncOut2', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncOut2'}, {'srcline': 84, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncOut3', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncOut3'}, {'srcline': 85, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncOut4', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncOut4'}]}", &AvtVimbaCameraConfig::sync_out_selector)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("sync_out_selector", "str", 1, "Selects the sync-out line to control", "{'enum_description': 'Sync-out selector', 'enum': [{'srcline': 82, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncOut1', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncOut1'}, {'srcline': 83, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncOut2', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncOut2'}, {'srcline': 84, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncOut3', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncOut3'}, {'srcline': 85, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'SyncOut4', 'ctype': 'std::string', 'type': 'str', 'name': 'SyncOut4'}]}", &AvtVimbaCameraConfig::sync_out_selector)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sync_out_source = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sync_out_source = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sync_out_source = "GPO";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("sync_out_source", "str", 1, "Signal source of the sync-out line specified by `sync_out_selector`", "{'enum_description': 'Sync-out signal', 'enum': [{'srcline': 86, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'GPO', 'ctype': 'std::string', 'type': 'str', 'name': 'GPO'}, {'srcline': 87, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionTriggerReady', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionTriggerReady'}, {'srcline': 88, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FrameTriggerReady', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameTriggerReady'}, {'srcline': 89, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FrameTrigger', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameTrigger'}, {'srcline': 90, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Exposing', 'ctype': 'std::string', 'type': 'str', 'name': 'Exposing'}, {'srcline': 91, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FrameReadout', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameReadout'}, {'srcline': 92, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Imaging', 'ctype': 'std::string', 'type': 'str', 'name': 'Imaging'}, {'srcline': 93, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Acquiring', 'ctype': 'std::string', 'type': 'str', 'name': 'Acquiring'}, {'srcline': 94, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'LineIn1', 'ctype': 'std::string', 'type': 'str', 'name': 'LineIn1'}, {'srcline': 95, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'LineIn2', 'ctype': 'std::string', 'type': 'str', 'name': 'LineIn2'}]}", &AvtVimbaCameraConfig::sync_out_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("sync_out_source", "str", 1, "Signal source of the sync-out line specified by `sync_out_selector`", "{'enum_description': 'Sync-out signal', 'enum': [{'srcline': 86, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'GPO', 'ctype': 'std::string', 'type': 'str', 'name': 'GPO'}, {'srcline': 87, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'AcquisitionTriggerReady', 'ctype': 'std::string', 'type': 'str', 'name': 'AcquisitionTriggerReady'}, {'srcline': 88, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FrameTriggerReady', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameTriggerReady'}, {'srcline': 89, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FrameTrigger', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameTrigger'}, {'srcline': 90, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Exposing', 'ctype': 'std::string', 'type': 'str', 'name': 'Exposing'}, {'srcline': 91, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'FrameReadout', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameReadout'}, {'srcline': 92, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Imaging', 'ctype': 'std::string', 'type': 'str', 'name': 'Imaging'}, {'srcline': 93, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Acquiring', 'ctype': 'std::string', 'type': 'str', 'name': 'Acquiring'}, {'srcline': 94, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'LineIn1', 'ctype': 'std::string', 'type': 'str', 'name': 'LineIn1'}, {'srcline': 95, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'LineIn2', 'ctype': 'std::string', 'type': 'str', 'name': 'LineIn2'}]}", &AvtVimbaCameraConfig::sync_out_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.iris_auto_target = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.iris_auto_target = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.iris_auto_target = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("iris_auto_target", "int", 0, "This is the target image mean value, in percent.", "", &AvtVimbaCameraConfig::iris_auto_target)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("iris_auto_target", "int", 0, "This is the target image mean value, in percent.", "", &AvtVimbaCameraConfig::iris_auto_target)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.iris_mode = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.iris_mode = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.iris_mode = "Continuous";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("iris_mode", "str", 0, "Set the iris mode. Disabled: no iris control. Video: enable video iris. VideoOpen: fully open a video iris. VideoClose: fully close a video iris.", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 67, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 68, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 69, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Auto'}]}", &AvtVimbaCameraConfig::iris_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<std::string>("iris_mode", "str", 0, "Set the iris mode. Disabled: no iris control. Video: enable video iris. VideoOpen: fully open a video iris. VideoClose: fully close a video iris.", "{'enum_description': 'Set Automatic Control', 'enum': [{'srcline': 67, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Off', 'ctype': 'std::string', 'type': 'str', 'name': 'Off'}, {'srcline': 68, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Once', 'ctype': 'std::string', 'type': 'str', 'name': 'Once'}, {'srcline': 69, 'description': '', 'srcfile': '/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg', 'cconsttype': 'const char * const', 'value': 'Continuous', 'ctype': 'std::string', 'type': 'str', 'name': 'Auto'}]}", &AvtVimbaCameraConfig::iris_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.iris_video_level_min = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.iris_video_level_min = 150;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.iris_video_level_min = 110;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("iris_video_level_min", "int", 0, "Minimum video iris level output by the camera, in approximately mV pp. A higher minimum value slows the adjustment time but prevents excessive overshoot.", "", &AvtVimbaCameraConfig::iris_video_level_min)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("iris_video_level_min", "int", 0, "Minimum video iris level output by the camera, in approximately mV pp. A higher minimum value slows the adjustment time but prevents excessive overshoot.", "", &AvtVimbaCameraConfig::iris_video_level_min)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.iris_video_level_max = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.iris_video_level_max = 150;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.iris_video_level_max = 110;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("iris_video_level_max", "int", 0, "Maximum video iris level output by the camera, in approximately mV pp. A lower minimum value slows the adjustment time but prevents excessive overshoot.", "", &AvtVimbaCameraConfig::iris_video_level_max)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr(new AvtVimbaCameraConfig::ParamDescription<int>("iris_video_level_max", "int", 0, "Maximum video iris level output by the camera, in approximately mV pp. A lower minimum value slows the adjustment time but prevents excessive overshoot.", "", &AvtVimbaCameraConfig::iris_video_level_max)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(AvtVimbaCameraConfig::AbstractGroupDescriptionConstPtr(new AvtVimbaCameraConfig::GroupDescription<AvtVimbaCameraConfig::DEFAULT, AvtVimbaCameraConfig>(Default)));
//#line 366 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<AvtVimbaCameraConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<AvtVimbaCameraConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    AvtVimbaCameraConfig __max__;
    AvtVimbaCameraConfig __min__;
    AvtVimbaCameraConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const AvtVimbaCameraConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static AvtVimbaCameraConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &AvtVimbaCameraConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const AvtVimbaCameraConfig &AvtVimbaCameraConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const AvtVimbaCameraConfig &AvtVimbaCameraConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const AvtVimbaCameraConfig &AvtVimbaCameraConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<AvtVimbaCameraConfig::AbstractParamDescriptionConstPtr> &AvtVimbaCameraConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<AvtVimbaCameraConfig::AbstractGroupDescriptionConstPtr> &AvtVimbaCameraConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const AvtVimbaCameraConfigStatics *AvtVimbaCameraConfig::__get_statics__()
  {
    const static AvtVimbaCameraConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = AvtVimbaCameraConfigStatics::get_instance();

    return statics;
  }

//#line 12 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Freerun = "Freerun";
//#line 13 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Line1 = "Line1";
//#line 14 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Line2 = "Line2";
//#line 15 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Line3 = "Line3";
//#line 16 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Line4 = "Line4";
//#line 17 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_FixedRate = "FixedRate";
//#line 18 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Software = "Software";
//#line 19 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_RisingEdge = "RisingEdge";
//#line 20 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_FallingEdge = "FallingEdge";
//#line 21 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_AnyEdge = "AnyEdge";
//#line 22 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_LevelHigh = "LevelHigh";
//#line 23 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_LevelLow = "LevelLow";
//#line 24 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_ModeOn = "On";
//#line 25 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_ModeOff = "Off";
//#line 26 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_FrameStart = "FrameStart";
//#line 27 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_AcquisitionStart = "AcquisitionStart";
//#line 28 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_AcquisitionEnd = "AcquisitionEnd";
//#line 29 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_AcquisitionRecord = "AcquisitionRecord";
//#line 30 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Continuous = "Continuous";
//#line 31 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SingleFrame = "SingleFrame";
//#line 32 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_MultiFrame = "MultiFrame";
//#line 33 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Recorder = "Recorder";
//#line 38 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Mono8 = "Mono8";
//#line 39 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Mono10 = "Mono10";
//#line 40 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Mono10Packed = "Mono10Packed";
//#line 41 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Mono12 = "Mono12";
//#line 42 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Mono12Packed = "Mono12Packed";
//#line 43 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGR8 = "BayerGR8";
//#line 44 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerRG8 = "BayerRG8";
//#line 45 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGB8 = "BayerGB8";
//#line 46 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerBG8 = "BayerBG8";
//#line 47 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGR10 = "BayerGR10";
//#line 48 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerRG10 = "BayerRG10";
//#line 49 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGB10 = "BayerGB10";
//#line 50 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerBG10 = "BayerBG10";
//#line 51 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGR12 = "BayerGR12";
//#line 52 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerRG12 = "BayerRG12";
//#line 53 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGB12 = "BayerGB12";
//#line 54 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerBG12 = "BayerBG12";
//#line 55 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGR10Packed = "BayerGR10Packed";
//#line 56 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerRG10Packed = "BayerRG10Packed";
//#line 57 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGB10Packed = "BayerGB10Packed";
//#line 58 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerBG10Packed = "BayerBG10Packed";
//#line 59 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGR12Packed = "BayerGR12Packed";
//#line 60 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerRG12Packed = "BayerRG12Packed";
//#line 61 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerGB12Packed = "BayerGB12Packed";
//#line 62 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BayerBG12Packed = "BayerBG12Packed";
//#line 63 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_RGB8Packed = "RGB8Packed";
//#line 64 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_BGR8Packed = "BGR8Packed";
//#line 67 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Off = "Off";
//#line 68 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Once = "Once";
//#line 69 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Auto = "Continuous";
//#line 70 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Red = "Red";
//#line 71 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Blue = "Blue";
//#line 72 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Normal = "Normal";
//#line 73 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Invert = "Invert";
//#line 74 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_PtpOff = "Off";
//#line 75 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_PtpSlave = "Slave";
//#line 76 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_PtpMaster = "Master";
//#line 77 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_PtpAuto = "Auto";
//#line 78 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SyncIn1 = "SyncIn1";
//#line 79 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SyncIn2 = "SyncIn2";
//#line 80 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SyncIn3 = "SyncIn3";
//#line 81 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SyncIn4 = "SyncIn4";
//#line 82 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SyncOut1 = "SyncOut1";
//#line 83 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SyncOut2 = "SyncOut2";
//#line 84 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SyncOut3 = "SyncOut3";
//#line 85 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_SyncOut4 = "SyncOut4";
//#line 86 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_GPO = "GPO";
//#line 87 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_AcquisitionTriggerReady = "AcquisitionTriggerReady";
//#line 88 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_FrameTriggerReady = "FrameTriggerReady";
//#line 89 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_FrameTrigger = "FrameTrigger";
//#line 90 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Exposing = "Exposing";
//#line 91 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_FrameReadout = "FrameReadout";
//#line 92 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Imaging = "Imaging";
//#line 93 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Acquiring = "Acquiring";
//#line 94 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_LineIn1 = "LineIn1";
//#line 95 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_LineIn2 = "LineIn2";
//#line 96 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_Mean = "Mean";
//#line 97 "/home/jdrjk0000/catkin_ws/src/avt_vimba_camera/cfg/AvtVimbaCamera.cfg"
      const char * const AvtVimbaCamera_FitRange = "FitRange";
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __AVTVIMBACAMERARECONFIGURATOR_H__
